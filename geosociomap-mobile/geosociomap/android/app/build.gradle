plugins {
    id "com.android.application"
    id "kotlin-android"
    id "org.jetbrains.kotlin.android" version "1.8.0" 
    
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "com.example.geosociomap"
    // compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.geosociomap"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        // minSdk = flutter.minSdkVersion
        minSdkVersion = 24
        targetSdk = 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }
}

dependencies {
    // val core_version = "1.13.1"

    // Java language implementation
    implementation("androidx.core:core:1.13.1")
    // Kotlin
    implementation("androidx.core:core-ktx:1.13.1")

    // To use RoleManagerCompat
    implementation("androidx.core:core-role:1.0.0")

    // To use the Animator APIs
    implementation("androidx.core:core-animation:1.0.0")
    // To test the Animator APIs
    androidTestImplementation("androidx.core:core-animation-testing:1.0.0")

    // Optional - To enable APIs that query the performance characteristics of GMS devices.
    implementation("androidx.core:core-performance:1.0.0")

    // Optional - to use ShortcutManagerCompat to donate shortcuts to be used by Google
    implementation("androidx.core:core-google-shortcuts:1.1.0")

    // Optional - to support backwards compatibility of RemoteViews
    implementation("androidx.core:core-remoteviews:1.1.0")

    // Optional - APIs for SplashScreen, including compatibility helpers on devices prior Android 12
    // implementation("androidx.core:core-splashscreen:1.2.0-alpha02")
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'com.android.support:multidex:1.0.3'
    // implementation 'androidx.core:core-ktx:1.7.1'
    // implementation ('com.mapbox.mapboxsdk:mapbox-android-sdk:9.7.1')
    // implementation 'com.mapbox.mapboxsdk:mapbox-android-core:0.2.1'
    // implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    
    implementation 'com.google.android.gms:play-services-location:21.0.1'
}

flutter {
    source = "../.."
}

configurations {
    all*.exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-telemetry'
}
